# -*- coding: utf-8 -*-
"""Virat vs  Sachin Comparison

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bs8ac_KHBKRAjefW4nmCr2ESR1WNRtlg
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)  
pd.set_option('display.expand_frame_repr', False)
pd.set_option('max_colwidth', None)
df = pd.read_csv('ODI_data.csv')
df.head(2)

df['Innings Runs Scored Num'].unique()

df = df[df['Innings Runs Scored Num'] != '-']
df['Innings Runs Scored Num'].unique()

df = df.dropna(subset = ['Innings Runs Scored Num'])
df['Innings Runs Scored Num'].unique()

df['Innings Date'] = pd.to_datetime(df['Innings Date'])
df['year'] = df['Innings Date'].dt.year
df.tail(1)

df['Innings Runs Scored Num'] = df['Innings Runs Scored Num'].astype('int')
df['Innings Balls Faced'] = df['Innings Balls Faced'].astype('int')
df['Innings Not Out Flag'] = df['Innings Not Out Flag'].astype('int')

sachin_df = df[(df.year >= 1994) & (df.year <= 2004)]
virat_df = df[(df.year >= 2009) & (df.year <= 2019)]
sachin_df.head(2)

virat_df.head(2)

# Parameters that we are taking care of while comparing both the players
# Runs per innings = Total Runs/Total Innings
# SR = 100*(Total Runs/Total Balls)
# 100's = sum(100's)
# 50's = sum(50's)
# Team contribution = 100*(Player Runs/Team Runs)
df.dtypes

# runs scored by sachin
sdf = sachin_df[sachin_df['Innings Player'] == 'SR Tendulkar'] #Take the same name as mentioned in the dataset
sdf.head()

sum(sdf['Innings Runs Scored Num'])

# runs scored by virat
kdf = virat_df[virat_df['Innings Player'] == 'V Kohli']
kdf.head()

sum(kdf['Innings Runs Scored Num'])

len(kdf), len(sdf) #No. of rows represent the no. of innings

# Runs per innings of both the batsmen
sum(kdf['Innings Runs Scored Num'])/len(kdf), sum(sdf['Innings Runs Scored Num'])/len(sdf) #Runs per innings of both the batsmen

# Calculation of Strike Rates of both the batsmen
100*sum(kdf['Innings Runs Scored Num'])/sum(kdf['Innings Balls Faced']), 100*sum(sdf['Innings Runs Scored Num'])/sum(sdf['Innings Balls Faced'])

# Calculation of the no. of 100's
sum(kdf["100's"]), sum(sdf["100's"])

# Calculation of the no. of 50's
sum(kdf["50's"]), sum(sdf["50's"])

# Team Contribution of Virat
sum(kdf['Innings Runs Scored Num'])/sum(virat_df[virat_df.Country == 'India']['Innings Runs Scored Num'])*100

# Team Contribution of Sachin
sum(sdf['Innings Runs Scored Num'])/sum(sachin_df[sachin_df.Country == 'India']['Innings Runs Scored Num'])*100

# Visualizations
sachin_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10)

sachin_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10).plot(kind = 'barh')
plt.show()

virat_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10)

virat_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10).plot(kind = 'barh')
plt.show()

sdf.groupby(['year'])['Innings Runs Scored Num'].sum().plot(kind = 'bar')
plt.show()

kdf.groupby(['year'])['Innings Runs Scored Num'].sum().plot(kind = 'bar')
plt.show()

## Normalization
# datasets of players who played in those time frames excluding virat and sachin so that we can compare them with their peers

non_virat_df = virat_df[virat_df['Innings Player'] != 'V Kohli']
non_sachin_df = sachin_df[sachin_df['Innings Player'] != 'SR Tendulkar']

#Virat's performance over is peers in terms of RPI i.e. Virat is 2.029 times better than his peers
(sum(kdf['Innings Runs Scored Num'])/len(kdf))/(sum(non_virat_df['Innings Runs Scored Num'])/len(non_virat_df))

#Sachin's performance over is peers in terms of RPI
(sum(sdf['Innings Runs Scored Num'])/len(sdf))/(sum(non_sachin_df['Innings Runs Scored Num'])/len(non_sachin_df))

# Normalization for Virat in terms of Strike Rate
(100*sum(kdf['Innings Runs Scored Num'])/sum(kdf['Innings Balls Faced']))/(100*sum(non_virat_df['Innings Runs Scored Num'])/sum(non_virat_df['Innings Balls Faced']))

# Normalization for Sachin in terms of Strike Rate
(100*sum(sdf['Innings Runs Scored Num'])/sum(sdf['Innings Balls Faced']))/(100*sum(non_sachin_df['Innings Runs Scored Num'])/sum(non_sachin_df['Innings Balls Faced']))

# Normalization for Virat in terms of 100's i.e. no. of matches needed to score a 100
(len(kdf)/sum(kdf["100's"]))/(len(non_virat_df)/sum(non_virat_df["100's"]))

# Normalization for Sachin in terms of 100's i.e. no. of matches needed to score a 100
(len(sdf)/sum(sdf["100's"]))/(len(non_sachin_df)/sum(non_sachin_df["100's"]))

# Normalization for Virat in terms of 50's i.e. no. of matches needed to score a 50
(len(kdf)/sum(kdf["50's"]))/(len(non_virat_df)/sum(non_virat_df["50's"]))

# Normalization for Sachin in terms of 50's i.e. no. of matches needed to score a 50
(len(sdf)/sum(sdf["50's"]))/(len(non_sachin_df)/sum(non_sachin_df["50's"]))

# Conclusion
# Parameters            Winner(After Normalization)
# Runs per innings   -       Virat  
# SR                 -       Sachin
# 100's              -       Sachin
# 50's               -       Virat
# Team contribution  -       Virat